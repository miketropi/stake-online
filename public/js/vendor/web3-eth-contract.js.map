{"version":3,"sources":["webpack:///./node_modules/web3-eth-contract/lib/index.js"],"names":["_","core","Method","utils","Subscription","formatters","errors","promiEvent","abi","Contract","jsonInterface","address","options","_this","this","args","Array","prototype","slice","call","arguments","Error","setProvider","packageInit","clearSubscriptions","_requestManager","constructor","isArray","ContractMissingABIError","lastArg","length","isObject","extend","_getOrSetDefaultOptions","Object","defineProperty","set","value","_address","toChecksumAddress","inputAddressFormatter","get","enumerable","methods","events","_jsonInterface","map","method","func","funcName","constant","stateMutability","payable","name","_jsonInterfaceMethodToString","type","signature","encodeFunctionSignature","_createTxObject","bind","parent","cascadeFunc","nextMethod","encodeEventSignature","event","_on","allEvents","defaultAccount","defaultBlock","handleRevert","val","common","defaultCommon","hardfork","defaultHardfork","chain","defaultChain","transactionPollingTimeout","transactionConfirmationBlocks","transactionBlockTimeout","provider","accounts","_ethAccounts","_getCallback","isFunction","pop","_checkListener","ContractReservedEventError","gasPrice","String","from","data","gas","gasLimit","_encodeEventABI","filter","result","f","undefined","forEach","inputBlockNumberFormatter","topics","anonymous","push","indexedTopics","inputs","i","indexed","v","encodeParameter","concat","toLowerCase","_decodeEventABI","outputLogFormatter","find","intf","indexedInputs","input","argTopics","returnValues","decodeLog","__length__","raw","_encodeMethodABI","methodSignature","_method","paramsABI","_parent","json","replace","inputLength","encodeParameters","_deployData","startsWith","returnValue","_decodeMethodReturn","outputs","decodeParameters","deploy","callback","ContractMissingDeployDataError","apply","deployData","_generateEventOptions","eventName","isString","ContractEventDoesNotExistError","isAddress","ContractNoAddressDefinedError","params","clone","once","ContractOnceRequiresCallbackError","fromBlock","err","res","sub","unsubscribe","subOptions","toBlock","console","warn","subscription","inputFormatter","inputLogFormatter","outputFormatter","subscriptionHandler","output","removed","emit","requestManager","subscribe","getPastEvents","getPastLogs","setRequestManager","buildCall","txObject","_executeMethod","request","send","encodeABI","estimateGas","InvalidNumberOfParams","_processExecuteArguments","defer","processedArgs","shift","isFinite","generateRequest","to","_fireError","eventEmitter","reject","ethAccounts","payload","inputCallFormatter","inputDefaultBlockNumberFormatter","format","hexToNumber","createFunction","abiCoder","ContractNoFromAddressDefinedError","isBoolean","extraFormatters","receiptFormatter","receipt","logs","log","count","ev","contractDeployFormatter","newContract","contractAddress","sendTransaction","inputTransactionFormatter","module","exports"],"mappings":"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","file":"js/vendor/web3-eth-contract.js","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract.js\n *\n * To initialize a contract use:\n *\n *  var Contract = require('web3-eth-contract');\n *  Contract.setProvider('ws://localhost:8546');\n *  var contract = new Contract(abi, address, ...);\n *\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Subscription = require('web3-core-subscriptions').subscription;\nvar formatters = require('web3-core-helpers').formatters;\nvar errors = require('web3-core-helpers').errors;\nvar promiEvent = require('web3-core-promievent');\nvar abi = require('web3-eth-abi');\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @constructor\n * @param {Array} jsonInterface\n * @param {String} address\n * @param {Object} options\n */\nvar Contract = function Contract(jsonInterface, address, options) {\n    var _this = this, args = Array.prototype.slice.call(arguments);\n    if (!(this instanceof Contract)) {\n        throw new Error('Please use the \"new\" keyword to instantiate a web3.eth.Contract() object!');\n    }\n    this.setProvider = function () {\n        core.packageInit(_this, arguments);\n        _this.clearSubscriptions = _this._requestManager.clearSubscriptions;\n    };\n    // sets _requestmanager\n    core.packageInit(this, [this.constructor]);\n    this.clearSubscriptions = this._requestManager.clearSubscriptions;\n    if (!jsonInterface || !(Array.isArray(jsonInterface))) {\n        throw errors.ContractMissingABIError();\n    }\n    // create the options object\n    this.options = {};\n    var lastArg = args[args.length - 1];\n    if (_.isObject(lastArg) && !_.isArray(lastArg)) {\n        options = lastArg;\n        this.options = _.extend(this.options, this._getOrSetDefaultOptions(options));\n        if (_.isObject(address)) {\n            address = null;\n        }\n    }\n    // set address\n    Object.defineProperty(this.options, 'address', {\n        set: function (value) {\n            if (value) {\n                _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\n            }\n        },\n        get: function () {\n            return _this._address;\n        },\n        enumerable: true\n    });\n    // add method and event signatures, when the jsonInterface gets set\n    Object.defineProperty(this.options, 'jsonInterface', {\n        set: function (value) {\n            _this.methods = {};\n            _this.events = {};\n            _this._jsonInterface = value.map(function (method) {\n                var func, funcName;\n                // make constant and payable backwards compatible\n                method.constant = (method.stateMutability === \"view\" || method.stateMutability === \"pure\" || method.constant);\n                method.payable = (method.stateMutability === \"payable\" || method.payable);\n                if (method.name) {\n                    funcName = utils._jsonInterfaceMethodToString(method);\n                }\n                // function\n                if (method.type === 'function') {\n                    method.signature = abi.encodeFunctionSignature(funcName);\n                    func = _this._createTxObject.bind({\n                        method: method,\n                        parent: _this\n                    });\n                    // add method only if not one already exists\n                    if (!_this.methods[method.name]) {\n                        _this.methods[method.name] = func;\n                    }\n                    else {\n                        var cascadeFunc = _this._createTxObject.bind({\n                            method: method,\n                            parent: _this,\n                            nextMethod: _this.methods[method.name]\n                        });\n                        _this.methods[method.name] = cascadeFunc;\n                    }\n                    // definitely add the method based on its signature\n                    _this.methods[method.signature] = func;\n                    // add method by name\n                    _this.methods[funcName] = func;\n                    // event\n                }\n                else if (method.type === 'event') {\n                    method.signature = abi.encodeEventSignature(funcName);\n                    var event = _this._on.bind(_this, method.signature);\n                    // add method only if not already exists\n                    if (!_this.events[method.name] || _this.events[method.name].name === 'bound ')\n                        _this.events[method.name] = event;\n                    // definitely add the method based on its signature\n                    _this.events[method.signature] = event;\n                    // add event by name\n                    _this.events[funcName] = event;\n                }\n                return method;\n            });\n            // add allEvents\n            _this.events.allEvents = _this._on.bind(_this, 'allevents');\n            return _this._jsonInterface;\n        },\n        get: function () {\n            return _this._jsonInterface;\n        },\n        enumerable: true\n    });\n    // get default account from the Class\n    var defaultAccount = this.constructor.defaultAccount;\n    var defaultBlock = this.constructor.defaultBlock || 'latest';\n    Object.defineProperty(this, 'handleRevert', {\n        get: function () {\n            if (_this.options.handleRevert === false || _this.options.handleRevert === true) {\n                return _this.options.handleRevert;\n            }\n            return this.constructor.handleRevert;\n        },\n        set: function (val) {\n            _this.options.handleRevert = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultCommon', {\n        get: function () {\n            return _this.options.common || this.constructor.defaultCommon;\n        },\n        set: function (val) {\n            _this.options.common = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultHardfork', {\n        get: function () {\n            return _this.options.hardfork || this.constructor.defaultHardfork;\n        },\n        set: function (val) {\n            _this.options.hardfork = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultChain', {\n        get: function () {\n            return _this.options.chain || this.constructor.defaultChain;\n        },\n        set: function (val) {\n            _this.options.chain = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingTimeout', {\n        get: function () {\n            if (_this.options.transactionPollingTimeout === 0) {\n                return _this.options.transactionPollingTimeout;\n            }\n            return _this.options.transactionPollingTimeout || this.constructor.transactionPollingTimeout;\n        },\n        set: function (val) {\n            _this.options.transactionPollingTimeout = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionConfirmationBlocks', {\n        get: function () {\n            if (_this.options.transactionConfirmationBlocks === 0) {\n                return _this.options.transactionConfirmationBlocks;\n            }\n            return _this.options.transactionConfirmationBlocks || this.constructor.transactionConfirmationBlocks;\n        },\n        set: function (val) {\n            _this.options.transactionConfirmationBlocks = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionBlockTimeout', {\n        get: function () {\n            if (_this.options.transactionBlockTimeout === 0) {\n                return _this.options.transactionBlockTimeout;\n            }\n            return _this.options.transactionBlockTimeout || this.constructor.transactionBlockTimeout;\n        },\n        set: function (val) {\n            _this.options.transactionBlockTimeout = val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n            }\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n            return val;\n        },\n        enumerable: true\n    });\n    // properties\n    this.methods = {};\n    this.events = {};\n    this._address = null;\n    this._jsonInterface = [];\n    // set getter/setter properties\n    this.options.address = address;\n    this.options.jsonInterface = jsonInterface;\n};\n/**\n * Sets the new provider, creates a new requestManager, registers the \"data\" listener on the provider and sets the\n * accounts module for the Contract class.\n *\n * @method setProvider\n *\n * @param {string|provider} provider\n * @param {Accounts} accounts\n *\n * @returns void\n */\nContract.setProvider = function (provider, accounts) {\n    // Contract.currentProvider = provider;\n    core.packageInit(this, [provider]);\n    this._ethAccounts = accounts;\n};\n/**\n * Get the callback and modify the array if necessary\n *\n * @method _getCallback\n * @param {Array} args\n * @return {Function} the callback\n */\nContract.prototype._getCallback = function getCallback(args) {\n    if (args && _.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n/**\n * Checks that no listener with name \"newListener\" or \"removeListener\" is added.\n *\n * @method _checkListener\n * @param {String} type\n * @param {String} event\n * @return {Object} the contract instance\n */\nContract.prototype._checkListener = function (type, event) {\n    if (event === type) {\n        throw errors.ContractReservedEventError(type);\n    }\n};\n/**\n * Use default values, if options are not available\n *\n * @method _getOrSetDefaultOptions\n * @param {Object} options the options gived by the user\n * @return {Object} the options with gaps filled by defaults\n */\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\n    var gasPrice = options.gasPrice ? String(options.gasPrice) : null;\n    var from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null;\n    options.data = options.data || this.options.data;\n    options.from = from || this.options.from;\n    options.gasPrice = gasPrice || this.options.gasPrice;\n    options.gas = options.gas || options.gasLimit || this.options.gas;\n    // TODO replace with only gasLimit?\n    delete options.gasLimit;\n    return options;\n};\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method _encodeEventABI\n * @param {Object} event\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nContract.prototype._encodeEventABI = function (event, options) {\n    options = options || {};\n    var filter = options.filter || {}, result = {};\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n    // use given topics\n    if (_.isArray(options.topics)) {\n        result.topics = options.topics;\n        // create topics based on filter\n    }\n    else {\n        result.topics = [];\n        // add event signature\n        if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n            result.topics.push(event.signature);\n        }\n        // add event topics (indexed arguments)\n        if (event.name !== 'ALLEVENTS') {\n            var indexedTopics = event.inputs.filter(function (i) {\n                return i.indexed === true;\n            }).map(function (i) {\n                var value = filter[i.name];\n                if (!value) {\n                    return null;\n                }\n                // TODO: https://github.com/ethereum/web3.js/issues/344\n                // TODO: deal properly with components\n                if (_.isArray(value)) {\n                    return value.map(function (v) {\n                        return abi.encodeParameter(i.type, v);\n                    });\n                }\n                return abi.encodeParameter(i.type, value);\n            });\n            result.topics = result.topics.concat(indexedTopics);\n        }\n        if (!result.topics.length)\n            delete result.topics;\n    }\n    if (this.options.address) {\n        result.address = this.options.address.toLowerCase();\n    }\n    return result;\n};\n/**\n * Should be used to decode indexed params and options\n *\n * @method _decodeEventABI\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nContract.prototype._decodeEventABI = function (data) {\n    var event = this;\n    data.data = data.data || '';\n    data.topics = data.topics || [];\n    var result = formatters.outputLogFormatter(data);\n    // if allEvents get the right event\n    if (event.name === 'ALLEVENTS') {\n        event = event.jsonInterface.find(function (intf) {\n            return (intf.signature === data.topics[0]);\n        }) || { anonymous: true };\n    }\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\n    event.inputs = event.inputs || [];\n    // Handle case where an event signature shadows the current ABI with non-identical\n    // arg indexing. If # of topics doesn't match, event is anon.\n    if (!event.anonymous) {\n        let indexedInputs = 0;\n        event.inputs.forEach(input => input.indexed ? indexedInputs++ : null);\n        if (indexedInputs > 0 && (data.topics.length !== indexedInputs + 1)) {\n            event = {\n                anonymous: true,\n                inputs: []\n            };\n        }\n    }\n    var argTopics = event.anonymous ? data.topics : data.topics.slice(1);\n    result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics);\n    delete result.returnValues.__length__;\n    // add name\n    result.event = event.name;\n    // add signature\n    result.signature = (event.anonymous || !data.topics[0]) ? null : data.topics[0];\n    // move the data and topics to \"raw\"\n    result.raw = {\n        data: result.data,\n        topics: result.topics\n    };\n    delete result.data;\n    delete result.topics;\n    return result;\n};\n/**\n * Encodes an ABI for a method, including signature or the method.\n * Or when constructor encodes only the constructor parameters.\n *\n * @method _encodeMethodABI\n * @param {Mixed} args the arguments to encode\n * @param {String} the encoded ABI\n */\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\n    var methodSignature = this._method.signature, args = this.arguments || [];\n    var signature = false, paramsABI = this._parent.options.jsonInterface.filter(function (json) {\n        return ((methodSignature === 'constructor' && json.type === methodSignature) ||\n            ((json.signature === methodSignature || json.signature === methodSignature.replace('0x', '') || json.name === methodSignature) && json.type === 'function'));\n    }).map(function (json) {\n        var inputLength = (_.isArray(json.inputs)) ? json.inputs.length : 0;\n        if (inputLength !== args.length) {\n            throw new Error('The number of arguments is not matching the methods required number. You need to pass ' + inputLength + ' arguments.');\n        }\n        if (json.type === 'function') {\n            signature = json.signature;\n        }\n        return _.isArray(json.inputs) ? json.inputs : [];\n    }).map(function (inputs) {\n        return abi.encodeParameters(inputs, args).replace('0x', '');\n    })[0] || '';\n    // return constructor\n    if (methodSignature === 'constructor') {\n        if (!this._deployData)\n            throw new Error('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n        if (!this._deployData.startsWith('0x')) {\n            this._deployData = '0x' + this._deployData;\n        }\n        return this._deployData + paramsABI;\n    }\n    // return method\n    var returnValue = (signature) ? signature + paramsABI : paramsABI;\n    if (!returnValue) {\n        throw new Error('Couldn\\'t find a matching contract method named \"' + this._method.name + '\".');\n    }\n    return returnValue;\n};\n/**\n * Decode method return values\n *\n * @method _decodeMethodReturn\n * @param {Array} outputs\n * @param {String} returnValues\n * @return {Object} decoded output return values\n */\nContract.prototype._decodeMethodReturn = function (outputs, returnValues) {\n    if (!returnValues) {\n        return null;\n    }\n    returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n    var result = abi.decodeParameters(outputs, returnValues);\n    if (result.__length__ === 1) {\n        return result[0];\n    }\n    delete result.__length__;\n    return result;\n};\n/**\n * Deploys a contract and fire events based on its state: transactionHash, receipt\n *\n * All event listeners will be removed, once the last possible event is fired (\"error\", or \"receipt\")\n *\n * @method deploy\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} EventEmitter possible events are \"error\", \"transactionHash\" and \"receipt\"\n */\nContract.prototype.deploy = function (options, callback) {\n    options = options || {};\n    options.arguments = options.arguments || [];\n    options = this._getOrSetDefaultOptions(options);\n    // throw error, if no \"data\" is specified\n    if (!options.data) {\n        if (typeof callback === 'function') {\n            return callback(errors.ContractMissingDeployDataError());\n        }\n        throw errors.ContractMissingDeployDataError();\n    }\n    var constructor = _.find(this.options.jsonInterface, function (method) {\n        return (method.type === 'constructor');\n    }) || {};\n    constructor.signature = 'constructor';\n    return this._createTxObject.apply({\n        method: constructor,\n        parent: this,\n        deployData: options.data,\n        _ethAccounts: this.constructor._ethAccounts\n    }, options.arguments);\n};\n/**\n * Gets the event signature and outputFormatters\n *\n * @method _generateEventOptions\n * @param {Object} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event options object\n */\nContract.prototype._generateEventOptions = function () {\n    var args = Array.prototype.slice.call(arguments);\n    // get the callback\n    var callback = this._getCallback(args);\n    // get the options\n    var options = (_.isObject(args[args.length - 1])) ? args.pop() : {};\n    var eventName = (_.isString(args[0])) ? args[0] : 'allevents';\n    var event = (eventName.toLowerCase() === 'allevents') ? {\n        name: 'ALLEVENTS',\n        jsonInterface: this.options.jsonInterface\n    } : this.options.jsonInterface.find(function (json) {\n        return (json.type === 'event' && (json.name === eventName || json.signature === '0x' + eventName.replace('0x', '')));\n    });\n    if (!event) {\n        throw errors.ContractEventDoesNotExistError(eventName);\n    }\n    if (!utils.isAddress(this.options.address)) {\n        throw errors.ContractNoAddressDefinedError();\n    }\n    return {\n        params: this._encodeEventABI(event, options),\n        event: event,\n        callback: callback\n    };\n};\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method clone\n * @return {Object} the event subscription\n */\nContract.prototype.clone = function () {\n    return new this.constructor(this.options.jsonInterface, this.options.address, this.options);\n};\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method once\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype.once = function (event, options, callback) {\n    var args = Array.prototype.slice.call(arguments);\n    // get the callback\n    callback = this._getCallback(args);\n    if (!callback) {\n        throw errors.ContractOnceRequiresCallbackError();\n    }\n    // don't allow fromBlock\n    if (options)\n        delete options.fromBlock;\n    // don't return as once shouldn't provide \"on\"\n    this._on(event, options, function (err, res, sub) {\n        sub.unsubscribe();\n        if (_.isFunction(callback)) {\n            callback(err, res, sub);\n        }\n    });\n    return undefined;\n};\n/**\n * Adds event listeners and creates a subscription.\n *\n * @method _on\n *\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n *\n * @return {Object} the event subscription\n */\nContract.prototype._on = function () {\n    var subOptions = this._generateEventOptions.apply(this, arguments);\n    if (subOptions.params && subOptions.params.toBlock) {\n        delete subOptions.params.toBlock;\n        console.warn('Invalid option: toBlock. Use getPastEvents for specific range.');\n    }\n    // prevent the event \"newListener\" and \"removeListener\" from being overwritten\n    this._checkListener('newListener', subOptions.event.name);\n    this._checkListener('removeListener', subOptions.event.name);\n    // TODO check if listener already exists? and reuse subscription if options are the same.\n    // create new subscription\n    var subscription = new Subscription({\n        subscription: {\n            params: 1,\n            inputFormatter: [formatters.inputLogFormatter],\n            outputFormatter: this._decodeEventABI.bind(subOptions.event),\n            // DUBLICATE, also in web3-eth\n            subscriptionHandler: function (output) {\n                if (output.removed) {\n                    this.emit('changed', output);\n                }\n                else {\n                    this.emit('data', output);\n                }\n                if (_.isFunction(this.callback)) {\n                    this.callback(null, output, this);\n                }\n            }\n        },\n        type: 'eth',\n        requestManager: this._requestManager\n    });\n    subscription.subscribe('logs', subOptions.params, subOptions.callback || function () { });\n    return subscription;\n};\n/**\n * Get past events from contracts\n *\n * @method getPastEvents\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the promievent\n */\nContract.prototype.getPastEvents = function () {\n    var subOptions = this._generateEventOptions.apply(this, arguments);\n    var getPastLogs = new Method({\n        name: 'getPastLogs',\n        call: 'eth_getLogs',\n        params: 1,\n        inputFormatter: [formatters.inputLogFormatter],\n        outputFormatter: this._decodeEventABI.bind(subOptions.event)\n    });\n    getPastLogs.setRequestManager(this._requestManager);\n    var call = getPastLogs.buildCall();\n    getPastLogs = null;\n    return call(subOptions.params, subOptions.callback);\n};\n/**\n * returns the an object with call, send, estimate functions\n *\n * @method _createTxObject\n * @returns {Object} an object with functions to call the methods\n */\nContract.prototype._createTxObject = function _createTxObject() {\n    var args = Array.prototype.slice.call(arguments);\n    var txObject = {};\n    if (this.method.type === 'function') {\n        txObject.call = this.parent._executeMethod.bind(txObject, 'call');\n        txObject.call.request = this.parent._executeMethod.bind(txObject, 'call', true); // to make batch requests\n    }\n    txObject.send = this.parent._executeMethod.bind(txObject, 'send');\n    txObject.send.request = this.parent._executeMethod.bind(txObject, 'send', true); // to make batch requests\n    txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject);\n    txObject.estimateGas = this.parent._executeMethod.bind(txObject, 'estimate');\n    if (args && this.method.inputs && args.length !== this.method.inputs.length) {\n        if (this.nextMethod) {\n            return this.nextMethod.apply(null, args);\n        }\n        throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name);\n    }\n    txObject.arguments = args || [];\n    txObject._method = this.method;\n    txObject._parent = this.parent;\n    txObject._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts;\n    if (this.deployData) {\n        txObject._deployData = this.deployData;\n    }\n    return txObject;\n};\n/**\n * Generates the options for the execute call\n *\n * @method _processExecuteArguments\n * @param {Array} args\n * @param {Promise} defer\n */\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\n    var processedArgs = {};\n    processedArgs.type = args.shift();\n    // get the callback\n    processedArgs.callback = this._parent._getCallback(args);\n    // get block number to use for call\n    if (processedArgs.type === 'call' && args[args.length - 1] !== true && (_.isString(args[args.length - 1]) || isFinite(args[args.length - 1])))\n        processedArgs.defaultBlock = args.pop();\n    // get the options\n    processedArgs.options = (_.isObject(args[args.length - 1])) ? args.pop() : {};\n    // get the generateRequest argument for batch requests\n    processedArgs.generateRequest = (args[args.length - 1] === true) ? args.pop() : false;\n    processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options);\n    processedArgs.options.data = this.encodeABI();\n    // add contract address\n    if (!this._deployData && !utils.isAddress(this._parent.options.address))\n        throw errors.ContractNoAddressDefinedError();\n    if (!this._deployData)\n        processedArgs.options.to = this._parent.options.address;\n    // return error, if no \"data\" is specified\n    if (!processedArgs.options.data)\n        return utils._fireError(new Error('Couldn\\'t find a matching contract method, or the number of parameters is wrong.'), defer.eventEmitter, defer.reject, processedArgs.callback);\n    return processedArgs;\n};\n/**\n * Executes a call, transact or estimateGas on a contract function\n *\n * @method _executeMethod\n * @param {String} type the type this execute function should execute\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\n */\nContract.prototype._executeMethod = function _executeMethod() {\n    var _this = this, args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer), defer = promiEvent((args.type !== 'send')), ethAccounts = _this.constructor._ethAccounts || _this._ethAccounts;\n    // simple return request for batch requests\n    if (args.generateRequest) {\n        var payload = {\n            params: [formatters.inputCallFormatter.call(this._parent, args.options)],\n            callback: args.callback\n        };\n        if (args.type === 'call') {\n            payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock));\n            payload.method = 'eth_call';\n            payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs);\n        }\n        else {\n            payload.method = 'eth_sendTransaction';\n        }\n        return payload;\n    }\n    switch (args.type) {\n        case 'estimate':\n            var estimateGas = (new Method({\n                name: 'estimateGas',\n                call: 'eth_estimateGas',\n                params: 1,\n                inputFormatter: [formatters.inputCallFormatter],\n                outputFormatter: utils.hexToNumber,\n                requestManager: _this._parent._requestManager,\n                accounts: ethAccounts,\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock\n            })).createFunction();\n            return estimateGas(args.options, args.callback);\n        case 'call':\n            // TODO check errors: missing \"from\" should give error on deploy and send, call ?\n            var call = (new Method({\n                name: 'call',\n                call: 'eth_call',\n                params: 2,\n                inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\n                // add output formatter for decoding\n                outputFormatter: function (result) {\n                    return _this._parent._decodeMethodReturn(_this._method.outputs, result);\n                },\n                requestManager: _this._parent._requestManager,\n                accounts: ethAccounts,\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n                handleRevert: _this._parent.handleRevert,\n                abiCoder: abi\n            })).createFunction();\n            return call(args.options, args.defaultBlock, args.callback);\n        case 'send':\n            // return error, if no \"from\" is specified\n            if (!utils.isAddress(args.options.from)) {\n                return utils._fireError(errors.ContractNoFromAddressDefinedError(), defer.eventEmitter, defer.reject, args.callback);\n            }\n            if (_.isBoolean(this._method.payable) && !this._method.payable && args.options.value && args.options.value > 0) {\n                return utils._fireError(new Error('Can not send value to non-payable contract method or constructor'), defer.eventEmitter, defer.reject, args.callback);\n            }\n            // make sure receipt logs are decoded\n            var extraFormatters = {\n                receiptFormatter: function (receipt) {\n                    if (_.isArray(receipt.logs)) {\n                        // decode logs\n                        var events = _.map(receipt.logs, function (log) {\n                            return _this._parent._decodeEventABI.call({\n                                name: 'ALLEVENTS',\n                                jsonInterface: _this._parent.options.jsonInterface\n                            }, log);\n                        });\n                        // make log names keys\n                        receipt.events = {};\n                        var count = 0;\n                        events.forEach(function (ev) {\n                            if (ev.event) {\n                                // if > 1 of the same event, don't overwrite any existing events\n                                if (receipt.events[ev.event]) {\n                                    if (Array.isArray(receipt.events[ev.event])) {\n                                        receipt.events[ev.event].push(ev);\n                                    }\n                                    else {\n                                        receipt.events[ev.event] = [receipt.events[ev.event], ev];\n                                    }\n                                }\n                                else {\n                                    receipt.events[ev.event] = ev;\n                                }\n                            }\n                            else {\n                                receipt.events[count] = ev;\n                                count++;\n                            }\n                        });\n                        delete receipt.logs;\n                    }\n                    return receipt;\n                },\n                contractDeployFormatter: function (receipt) {\n                    var newContract = _this._parent.clone();\n                    newContract.options.address = receipt.contractAddress;\n                    return newContract;\n                }\n            };\n            var sendTransaction = (new Method({\n                name: 'sendTransaction',\n                call: 'eth_sendTransaction',\n                params: 1,\n                inputFormatter: [formatters.inputTransactionFormatter],\n                requestManager: _this._parent._requestManager,\n                accounts: _this.constructor._ethAccounts || _this._ethAccounts,\n                defaultAccount: _this._parent.defaultAccount,\n                defaultBlock: _this._parent.defaultBlock,\n                transactionBlockTimeout: _this._parent.transactionBlockTimeout,\n                transactionConfirmationBlocks: _this._parent.transactionConfirmationBlocks,\n                transactionPollingTimeout: _this._parent.transactionPollingTimeout,\n                defaultCommon: _this._parent.defaultCommon,\n                defaultChain: _this._parent.defaultChain,\n                defaultHardfork: _this._parent.defaultHardfork,\n                handleRevert: _this._parent.handleRevert,\n                extraFormatters: extraFormatters,\n                abiCoder: abi\n            })).createFunction();\n            return sendTransaction(args.options, args.callback);\n        default:\n            throw new Error('Method \"' + args.type + '\" not implemented.');\n    }\n};\nmodule.exports = Contract;\n"],"sourceRoot":""}