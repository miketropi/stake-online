{"version":3,"sources":["webpack:///./node_modules/rlp/dist/index.js","webpack:///./node_modules/rlp/node_modules/bn.js/lib/bn.js"],"names":["Object","defineProperty","exports","value","getLength","decode","encode","BN","safeParseInt","v","base","slice","Error","parseInt","encodeLength","len","offset","Buffer","from","hexLength","intToHex","firstByte","length","_decode","input","llength","data","innerRemainder","d","decoded","remainder","toString","push","totalLength","isHexPrefixed","str","integer","hex","toBuffer","isBuffer","a","Uint8Array","isBN","toArray","Array","isArray","output","i","buf","concat","inputBuf","stream","inputBuffer","module","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","endian","this","negative","words","red","_init","wordSize","e","parseHex","start","end","r","Math","min","c","charCodeAt","parseBase","mul","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","strip","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"mappings":"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","file":"js/vendor/rlp.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar BN = require(\"bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v.slice(0, 2) === '00') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (BN.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}