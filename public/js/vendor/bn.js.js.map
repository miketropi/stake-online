{"version":3,"sources":["webpack:///./node_modules/bn.js/lib/bn.js"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","Buffer","wordSize","e","parseHex","str","start","end","r","len","Math","min","z","i","b","c","charCodeAt","parseBase","mul","move","dest","src","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","_strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","u"],"mappings":"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","file":"js/vendor/bn.js.js","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}