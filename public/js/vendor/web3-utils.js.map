{"version":3,"sources":["webpack:///./node_modules/web3-utils/lib/index.js","webpack:///./node_modules/web3-utils/lib/soliditySha3.js","webpack:///./node_modules/web3-utils/lib/utils.js","webpack:///./node_modules/web3-utils/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/web3-utils/node_modules/eth-lib/lib/hash.js"],"names":["_","ethjsUnit","utils","soliditySha3","randombytes","BN","_flattenTypes","includeTuple","puts","types","forEach","param","components","type","substring","Error","suffix","arrayBracket","indexOf","result","isArray","push","join","hexToAscii","hex","isHexStrict","str","i","l","length","code","parseInt","substr","String","fromCharCode","asciiToHex","n","charCodeAt","toString","getUnitValue","unit","toLowerCase","unitMap","JSON","stringify","module","exports","_fireError","error","emitter","reject","callback","optionalData","isObject","data","message","isString","isFunction","listeners","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","name","inputs","randomHex","size","isBN","isBigNumber","isHex","sha3","sha3Raw","keccak256","soliditySha3Raw","encodePacked","isAddress","checkAddressChecksum","toChecksumAddress","address","test","replace","addressHash","checksumAddress","toUpperCase","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","stripHexPrefix","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","toWei","number","fromWei","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom","compareBlockNumbers","a","b","bnA","bnB","lt","eq","_parseNumber","arg","_solidityPack","value","arraySize","num","startsWith","slice","typesize","exec","_parseTypeN","bitLength","toTwos","_processSolidityEncodePackedArgs","hasOwnProperty","t","v","_parseTypeNArray","map","val","args","Array","prototype","call","arguments","hexArgs","numberToBN","utf8","Hash","ethereumBloomFilters","object","constructor","apply","e","encode","split","reverse","isNull","isUndefined","isFinite","bytes","c","isNumber","SHA3_NULL_S","returnValue","_Hash","bloom","ethereumAddress","contractAddress","topic","decode","toNumber","returnType","isBoolean","Buffer","isBuffer","string","chars","sign","hasPrefix","padding","assert","msg","inherits","ctor","superCtor","super_","TempCtor","base","endian","this","negative","words","red","_init","wordSize","parseHex","start","end","r","len","Math","min","parseBase","mul","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lten","lte","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","HEX_CHARS","KECCAK_PADDING","SHIFT","RC","f","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","keccak","state","blocks","byteCount","blockCount","outputBlocks","index","reset","block","lastByteIndex","update","concat","Keccak","keccak512","keccak256s","keccak512s"],"mappings":"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","file":"js/vendor/web3-utils.js","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('underscore');\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n    // add data if given\n    if (_.isObject(error) && !(error instanceof Error) && error.data) {\n        if (_.isObject(error.data) || _.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n        error = error.message + \"\\n\" + error.data;\n    }\n    if (_.isString(error)) {\n        error = new Error(error);\n    }\n    if (_.isFunction(callback)) {\n        callback(error, optionalData);\n    }\n    if (_.isFunction(reject)) {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (_.isFunction(emitter.listeners) &&\n                emitter.listeners('error').length) || _.isFunction(callback)) {\n            emitter.catch(function () { });\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n    if (emitter && _.isFunction(emitter.emit)) {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n    return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (_.isObject(json) && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n    puts.forEach(function (param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) {\n                suffix = param.type.substring(arrayBracket);\n            }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if (_.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if (!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        }\n        else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n    if (!str)\n        return \"0x00\";\n    var hex = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !_.isString(number)) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined')\n        return '';\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n    address = address.toLowerCase().replace(/^0x/i, '');\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\n    var checksumAddress = '0x';\n    for (var i = 0; i < address.length; i++) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n *\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\nvar compareBlockNumbers = function (a, b) {\n    if (a == b) {\n        return 0;\n    }\n    else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n        return 0;\n    }\n    else if (\"genesis\" == a || \"earliest\" == a) {\n        // b !== a, thus a < b\n        return -1;\n    }\n    else if (\"genesis\" == b || \"earliest\" == b) {\n        // b !== a, thus a > b\n        return 1;\n    }\n    else if (a == \"latest\") {\n        if (b == \"pending\") {\n            return -1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return 1;\n        }\n    }\n    else if (b === \"latest\") {\n        if (a == \"pending\") {\n            return 1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return -1;\n        }\n    }\n    else if (a == \"pending\") {\n        // b (== OR <) \"latest\", thus a > b\n        return 1;\n    }\n    else if (b == \"pending\") {\n        return -1;\n    }\n    else {\n        let bnA = new BN(a);\n        let bnB = new BN(b);\n        if (bnA.lt(bnB)) {\n            return -1;\n        }\n        else if (bnA.eq(bnB)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n};\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    _: _,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    encodePacked: soliditySha3.encodePacked,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n    hexToNumberString: utils.hexToNumberString,\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber,\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex,\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n    stripHexPrefix: utils.stripHexPrefix,\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom,\n    compareBlockNumbers: compareBlockNumbers\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    }\n    else if (name === 'int') {\n        return 'int256';\n    }\n    else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    }\n    else if (name === 'uint') {\n        return 'uint256';\n    }\n    else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    }\n    else if (name === 'fixed') {\n        return 'fixed128x128';\n    }\n    else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    }\n    else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i, ''), 16);\n        }\n        else {\n            return new BN(arg, 10);\n        }\n    }\n    else if (type === 'number') {\n        return new BN(arg);\n    }\n    else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    }\n    else if (utils.isBN(arg)) {\n        return arg;\n    }\n    else {\n        throw new Error(arg + ' is not a number');\n    }\n};\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n    var size, num;\n    type = _elementaryName(type);\n    if (type === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters ' + value.length);\n        }\n        return value;\n    }\n    else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    }\n    else if (type === 'bool') {\n        return value ? '01' : '00';\n    }\n    else if (type.startsWith('address')) {\n        if (arraySize) {\n            size = 64;\n        }\n        else {\n            size = 40;\n        }\n        if (!utils.isAddress(value)) {\n            throw new Error(value + ' is not a valid address, or the checksum is invalid.');\n        }\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n    size = _parseTypeN(type);\n    if (type.startsWith('bytes')) {\n        if (!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n        // must be 32 byte slices when in an array\n        if (arraySize) {\n            size = 32;\n        }\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new Error('Invalid bytes' + size + ' for ' + value);\n        }\n        return utils.rightPad(value, size * 2);\n    }\n    else if (type.startsWith('uint')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            throw new Error('Supplied uint ' + num.toString() + ' is negative');\n        }\n        return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n    }\n    else if (type.startsWith('int')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        }\n        else {\n            return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n        }\n    }\n    else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\nvar _processSolidityEncodePackedArgs = function (arg) {\n    /*jshint maxcomplexity:false */\n    if (_.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    var type, value = '';\n    var hexArg, arraySize;\n    // if type is given\n    if (_.isObject(arg) && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n        // otherwise try to guess the type\n    }\n    else {\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) && typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n    // get the array size\n    if (_.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if (arraySize && value.length !== arraySize) {\n            throw new Error(type + ' is not matching the given array ' + JSON.stringify(value));\n        }\n        else {\n            arraySize = value.length;\n        }\n    }\n    if (_.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x', '');\n        });\n        return hexArg.join('');\n    }\n    else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x', '');\n    }\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = _.map(args, _processSolidityEncodePackedArgs);\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n    return utils.sha3('0x' + hexArgs.join(''));\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\nvar soliditySha3Raw = function () {\n    return utils.sha3Raw('0x' + _.map(Array.prototype.slice.call(arguments), _processSolidityEncodePackedArgs).join(''));\n};\n/**\n * Encode packed args to hex\n *\n * @method encodePacked\n * @return {String} the hex encoded arguments\n */\nvar encodePacked = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = _.map(args, _processSolidityEncodePackedArgs);\n    return '0x' + hexArgs.join('').toLowerCase();\n};\nmodule.exports = {\n    soliditySha3: soliditySha3,\n    soliditySha3Raw: soliditySha3Raw,\n    encodePacked: encodePacked\n};\n","/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar _ = require('underscore');\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar Hash = require(\"eth-lib/lib/hash\");\nvar ethereumBloomFilters = require('ethereum-bloom-filters');\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return BN.isBN(object);\n};\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function (number) {\n    try {\n        return numberToBN.apply(null, arguments);\n    }\n    catch (e) {\n        throw new Error(e + ' Given value: \"' + number + '\"');\n    }\n};\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x' + toBN(number).toTwos(256).toString(16, 64);\n};\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    }\n    else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    }\n    else {\n        return checkAddressChecksum(address);\n    }\n};\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i, '');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i, '');\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function (str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n    return \"0x\" + hex;\n};\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function (hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"' + hex + '\" must be a valid HEX string.');\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    var l = hex.length;\n    for (var i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8.decode(str);\n};\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumber = function (value) {\n    if (!value) {\n        return value;\n    }\n    if (_.isString(value) && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toNumber();\n};\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value)\n        return value;\n    if (_.isString(value) && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toString(10);\n};\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if (_.isNull(value) || _.isUndefined(value)) {\n        return value;\n    }\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"' + value + '\" is not a number.');\n    }\n    var number = toBN(value);\n    var result = number.toString(16);\n    return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function (bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x' + hex.join(\"\");\n};\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function (hex) {\n    hex = hex.toString(16);\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n    }\n    hex = hex.replace(/^0x/i, '');\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n};\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\n    }\n    if (_.isBoolean(value)) {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (Buffer.isBuffer(value)) {\n        return '0x' + value.toString('hex');\n    }\n    if (_.isObject(value) && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    // if its a negative number, pass it through numberToHex\n    if (_.isString(value)) {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        }\n        else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((_.isString(hex) || _.isNumber(hex)) && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n/**\n * Remove 0x prefix from string\n *\n * @method stripHexPrefix\n * @param {String} str to be checked\n * @returns {String}\n */\nvar stripHexPrefix = function (str) {\n    if (str !== 0 && isHex(str))\n        return str.replace(/^(-)?0x/i, '$1');\n    return str;\n};\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    return ethereumBloomFilters.isBloom(bloom);\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n    return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n/**\n * Returns true if the contract address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n    return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    return ethereumBloomFilters.isTopic(topic);\n};\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopicInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\nvar isInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nvar sha3 = function (value) {\n    if (isBN(value)) {\n        value = value.toString();\n    }\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = hexToBytes(value);\n    }\n    var returnValue = Hash.keccak256(value); // jshint ignore:line\n    if (returnValue === SHA3_NULL_S) {\n        return null;\n    }\n    else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = Hash;\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\nvar sha3Raw = function (value) {\n    value = sha3(value);\n    if (value === null) {\n        return SHA3_NULL_S;\n    }\n    return value;\n};\nmodule.exports = {\n    BN: BN,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom,\n    isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n    isContractAddressInBloom: isContractAddressInBloom,\n    isTopic: isTopic,\n    isTopicInBloom: isTopicInBloom,\n    isInBloom: isInBloom,\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    stripHexPrefix: stripHexPrefix,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3,\n    sha3Raw: sha3Raw\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","// This was ported from https://github.com/emn178/js-sha3, with some minor\n// modifications and pruning. It is licensed under MIT:\n//\n// Copyright 2015-2016 Chen, Yi-Cyuan\n//  \n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst HEX_CHARS = '0123456789abcdef'.split('');\nconst KECCAK_PADDING = [1, 256, 65536, 16777216];\nconst SHIFT = [0, 8, 16, 24];\nconst RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n\nconst Keccak = bits => ({\n  blocks: [],\n  reset: true,\n  block: 0,\n  start: 0,\n  blockCount: 1600 - (bits << 1) >> 5,\n  outputBlocks: bits >> 5,\n  s: (s => [].concat(s, s, s, s, s))([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n});\n\nconst update = (state, message) => {\n  var length = message.length,\n      blocks = state.blocks,\n      byteCount = state.blockCount << 2,\n      blockCount = state.blockCount,\n      outputBlocks = state.outputBlocks,\n      s = state.s,\n      index = 0,\n      i,\n      code;\n\n  // update\n  while (index < length) {\n    if (state.reset) {\n      state.reset = false;\n      blocks[0] = state.block;\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    if (typeof message !== \"string\") {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      }\n    } else {\n      for (i = state.start; index < length && i < byteCount; ++index) {\n        code = message.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i >> 2] |= code << SHIFT[i++ & 3];\n        } else if (code < 0x800) {\n          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        } else {\n          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n        }\n      }\n    }\n    state.lastByteIndex = i;\n    if (i >= byteCount) {\n      state.start = i - byteCount;\n      state.block = blocks[blockCount];\n      for (i = 0; i < blockCount; ++i) {\n        s[i] ^= blocks[i];\n      }\n      f(s);\n      state.reset = true;\n    } else {\n      state.start = i;\n    }\n  }\n\n  // finalize\n  i = state.lastByteIndex;\n  blocks[i >> 2] |= KECCAK_PADDING[i & 3];\n  if (state.lastByteIndex === byteCount) {\n    blocks[0] = blocks[blockCount];\n    for (i = 1; i < blockCount + 1; ++i) {\n      blocks[i] = 0;\n    }\n  }\n  blocks[blockCount - 1] |= 0x80000000;\n  for (i = 0; i < blockCount; ++i) {\n    s[i] ^= blocks[i];\n  }\n  f(s);\n\n  // toString\n  var hex = '',\n      i = 0,\n      j = 0,\n      block;\n  while (j < outputBlocks) {\n    for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n      block = s[i];\n      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n    }\n    if (j % blockCount === 0) {\n      f(s);\n      i = 0;\n    }\n  }\n  return \"0x\" + hex;\n};\n\nconst f = s => {\n  var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n  for (n = 0; n < 48; n += 2) {\n    c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n    c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n    c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n    c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n    c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n    c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n    c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n    c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n    c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n    c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n    h = c8 ^ (c2 << 1 | c3 >>> 31);\n    l = c9 ^ (c3 << 1 | c2 >>> 31);\n    s[0] ^= h;\n    s[1] ^= l;\n    s[10] ^= h;\n    s[11] ^= l;\n    s[20] ^= h;\n    s[21] ^= l;\n    s[30] ^= h;\n    s[31] ^= l;\n    s[40] ^= h;\n    s[41] ^= l;\n    h = c0 ^ (c4 << 1 | c5 >>> 31);\n    l = c1 ^ (c5 << 1 | c4 >>> 31);\n    s[2] ^= h;\n    s[3] ^= l;\n    s[12] ^= h;\n    s[13] ^= l;\n    s[22] ^= h;\n    s[23] ^= l;\n    s[32] ^= h;\n    s[33] ^= l;\n    s[42] ^= h;\n    s[43] ^= l;\n    h = c2 ^ (c6 << 1 | c7 >>> 31);\n    l = c3 ^ (c7 << 1 | c6 >>> 31);\n    s[4] ^= h;\n    s[5] ^= l;\n    s[14] ^= h;\n    s[15] ^= l;\n    s[24] ^= h;\n    s[25] ^= l;\n    s[34] ^= h;\n    s[35] ^= l;\n    s[44] ^= h;\n    s[45] ^= l;\n    h = c4 ^ (c8 << 1 | c9 >>> 31);\n    l = c5 ^ (c9 << 1 | c8 >>> 31);\n    s[6] ^= h;\n    s[7] ^= l;\n    s[16] ^= h;\n    s[17] ^= l;\n    s[26] ^= h;\n    s[27] ^= l;\n    s[36] ^= h;\n    s[37] ^= l;\n    s[46] ^= h;\n    s[47] ^= l;\n    h = c6 ^ (c0 << 1 | c1 >>> 31);\n    l = c7 ^ (c1 << 1 | c0 >>> 31);\n    s[8] ^= h;\n    s[9] ^= l;\n    s[18] ^= h;\n    s[19] ^= l;\n    s[28] ^= h;\n    s[29] ^= l;\n    s[38] ^= h;\n    s[39] ^= l;\n    s[48] ^= h;\n    s[49] ^= l;\n\n    b0 = s[0];\n    b1 = s[1];\n    b32 = s[11] << 4 | s[10] >>> 28;\n    b33 = s[10] << 4 | s[11] >>> 28;\n    b14 = s[20] << 3 | s[21] >>> 29;\n    b15 = s[21] << 3 | s[20] >>> 29;\n    b46 = s[31] << 9 | s[30] >>> 23;\n    b47 = s[30] << 9 | s[31] >>> 23;\n    b28 = s[40] << 18 | s[41] >>> 14;\n    b29 = s[41] << 18 | s[40] >>> 14;\n    b20 = s[2] << 1 | s[3] >>> 31;\n    b21 = s[3] << 1 | s[2] >>> 31;\n    b2 = s[13] << 12 | s[12] >>> 20;\n    b3 = s[12] << 12 | s[13] >>> 20;\n    b34 = s[22] << 10 | s[23] >>> 22;\n    b35 = s[23] << 10 | s[22] >>> 22;\n    b16 = s[33] << 13 | s[32] >>> 19;\n    b17 = s[32] << 13 | s[33] >>> 19;\n    b48 = s[42] << 2 | s[43] >>> 30;\n    b49 = s[43] << 2 | s[42] >>> 30;\n    b40 = s[5] << 30 | s[4] >>> 2;\n    b41 = s[4] << 30 | s[5] >>> 2;\n    b22 = s[14] << 6 | s[15] >>> 26;\n    b23 = s[15] << 6 | s[14] >>> 26;\n    b4 = s[25] << 11 | s[24] >>> 21;\n    b5 = s[24] << 11 | s[25] >>> 21;\n    b36 = s[34] << 15 | s[35] >>> 17;\n    b37 = s[35] << 15 | s[34] >>> 17;\n    b18 = s[45] << 29 | s[44] >>> 3;\n    b19 = s[44] << 29 | s[45] >>> 3;\n    b10 = s[6] << 28 | s[7] >>> 4;\n    b11 = s[7] << 28 | s[6] >>> 4;\n    b42 = s[17] << 23 | s[16] >>> 9;\n    b43 = s[16] << 23 | s[17] >>> 9;\n    b24 = s[26] << 25 | s[27] >>> 7;\n    b25 = s[27] << 25 | s[26] >>> 7;\n    b6 = s[36] << 21 | s[37] >>> 11;\n    b7 = s[37] << 21 | s[36] >>> 11;\n    b38 = s[47] << 24 | s[46] >>> 8;\n    b39 = s[46] << 24 | s[47] >>> 8;\n    b30 = s[8] << 27 | s[9] >>> 5;\n    b31 = s[9] << 27 | s[8] >>> 5;\n    b12 = s[18] << 20 | s[19] >>> 12;\n    b13 = s[19] << 20 | s[18] >>> 12;\n    b44 = s[29] << 7 | s[28] >>> 25;\n    b45 = s[28] << 7 | s[29] >>> 25;\n    b26 = s[38] << 8 | s[39] >>> 24;\n    b27 = s[39] << 8 | s[38] >>> 24;\n    b8 = s[48] << 14 | s[49] >>> 18;\n    b9 = s[49] << 14 | s[48] >>> 18;\n\n    s[0] = b0 ^ ~b2 & b4;\n    s[1] = b1 ^ ~b3 & b5;\n    s[10] = b10 ^ ~b12 & b14;\n    s[11] = b11 ^ ~b13 & b15;\n    s[20] = b20 ^ ~b22 & b24;\n    s[21] = b21 ^ ~b23 & b25;\n    s[30] = b30 ^ ~b32 & b34;\n    s[31] = b31 ^ ~b33 & b35;\n    s[40] = b40 ^ ~b42 & b44;\n    s[41] = b41 ^ ~b43 & b45;\n    s[2] = b2 ^ ~b4 & b6;\n    s[3] = b3 ^ ~b5 & b7;\n    s[12] = b12 ^ ~b14 & b16;\n    s[13] = b13 ^ ~b15 & b17;\n    s[22] = b22 ^ ~b24 & b26;\n    s[23] = b23 ^ ~b25 & b27;\n    s[32] = b32 ^ ~b34 & b36;\n    s[33] = b33 ^ ~b35 & b37;\n    s[42] = b42 ^ ~b44 & b46;\n    s[43] = b43 ^ ~b45 & b47;\n    s[4] = b4 ^ ~b6 & b8;\n    s[5] = b5 ^ ~b7 & b9;\n    s[14] = b14 ^ ~b16 & b18;\n    s[15] = b15 ^ ~b17 & b19;\n    s[24] = b24 ^ ~b26 & b28;\n    s[25] = b25 ^ ~b27 & b29;\n    s[34] = b34 ^ ~b36 & b38;\n    s[35] = b35 ^ ~b37 & b39;\n    s[44] = b44 ^ ~b46 & b48;\n    s[45] = b45 ^ ~b47 & b49;\n    s[6] = b6 ^ ~b8 & b0;\n    s[7] = b7 ^ ~b9 & b1;\n    s[16] = b16 ^ ~b18 & b10;\n    s[17] = b17 ^ ~b19 & b11;\n    s[26] = b26 ^ ~b28 & b20;\n    s[27] = b27 ^ ~b29 & b21;\n    s[36] = b36 ^ ~b38 & b30;\n    s[37] = b37 ^ ~b39 & b31;\n    s[46] = b46 ^ ~b48 & b40;\n    s[47] = b47 ^ ~b49 & b41;\n    s[8] = b8 ^ ~b0 & b2;\n    s[9] = b9 ^ ~b1 & b3;\n    s[18] = b18 ^ ~b10 & b12;\n    s[19] = b19 ^ ~b11 & b13;\n    s[28] = b28 ^ ~b20 & b22;\n    s[29] = b29 ^ ~b21 & b23;\n    s[38] = b38 ^ ~b30 & b32;\n    s[39] = b39 ^ ~b31 & b33;\n    s[48] = b48 ^ ~b40 & b42;\n    s[49] = b49 ^ ~b41 & b43;\n\n    s[0] ^= RC[n];\n    s[1] ^= RC[n + 1];\n  }\n};\n\nconst keccak = bits => str => {\n  var msg;\n  if (str.slice(0, 2) === \"0x\") {\n    msg = [];\n    for (var i = 2, l = str.length; i < l; i += 2) msg.push(parseInt(str.slice(i, i + 2), 16));\n  } else {\n    msg = str;\n  }\n  return update(Keccak(bits, bits), msg);\n};\n\nmodule.exports = {\n  keccak256: keccak(256),\n  keccak512: keccak(512),\n  keccak256s: keccak(256),\n  keccak512s: keccak(512)\n};"],"sourceRoot":""}